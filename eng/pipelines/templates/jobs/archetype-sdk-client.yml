jobs:
  - job: 'Build'

    variables:
      - template: ../variables/globals.yml

    pool:
      vmImage: 'macOS-10.14'

    steps:
      - script: |
          echo "##vso[build.addbuildtag]Scheduled"
        displayName: 'Tag scheduled builds'
        condition: and(succeeded(), eq(variables['Build.SourceBranchName'],'master'),eq(variables['Build.Reason'],'Schedule'))

      - template: tools/daily-dev-build-variable/daily-dev-build-variable.yml@azure-sdk-tools

      - script: sudo xcode-select --switch /Applications/Xcode_11.3.app
        displayName: 'Use Xcode 11.3'

      - script: pod install
        displayName: 'Install dependencies'

      - script: |
          set -o pipefail
          xcodebuild -workspace AzureSDK.xcworkspace -scheme all -destination "platform=iOS Simulator,OS=13.3,name=iPhone 11 Pro Max" -configuration Release -derivedDataPath $(Build.ArtifactStagingDirectory) build | xcpretty -c
        displayName: 'Build framework bundle'

      - upload: $(Build.ArtifactStagingDirectory)/Build/Products/Release-iphonesimulator
        artifact: bundles

  - job: 'Analyze'
    condition: and(succeeded(), ne(variables['Skip.Analyze'], 'true'))

    variables:
      - template: ../variables/globals.yml

    pool:
      vmImage: 'macOS-10.14'

    steps:
      - task: UsePythonVersion@0
        displayName: 'Use Python 3.6'
        inputs:
          versionSpec: '3.6'
          
      - script: sudo xcode-select --switch /Applications/Xcode_11.3.app
        displayName: 'Use Xcode 11.3'

      - script: |
          brew install swiftlint
          swiftlint lint --quiet --reporter emoji
        displayName: 'Lint framework sources'

      - script: |
          pip install setuptools wheel
          pip install doc-warden==$(DocWardenVersion)
          ward scan -d $(Build.SourcesDirectory) -c $(Build.SourcesDirectory)/eng/.docsettings.yml
        displayName: 'Verify Readmes'

      - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
        # ComponentGovernance is currently unable to run on pull requests of public projects. Running on non-PR
        # builds should be sufficient.
        condition: and(succeededOrFailed(), ne(variables['Build.Reason'], 'PullRequest'))
        displayName: 'Component Detection'
